FROM python:3.13-alpine

# Install dependencies in a single layer
RUN apk add --no-cache \
    build-base \
    postgresql-dev \
    gcc \
    python3-dev \
    musl-dev \
    netcat-openbsd \
    curl  # Added for testing endpoints

WORKDIR /app

# Install Python dependencies
COPY backend/atria/requirements.txt backend/atria/setup.py backend/atria/tox.ini ./
RUN pip install --no-cache-dir -U pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install -e .

# Copy application code
COPY backend/atria/api api/
COPY backend/atria/seeders seeders/
COPY backend/atria/migrations migrations/
COPY backend/atria/init.sh .
RUN chmod +x init.sh

# Environment variables for production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV FLASK_DEBUG=0
ENV FLASK_ENV=production
ENV GUNICORN_CMD_ARGS="--bind=0.0.0.0:5000 \
    --workers=4 \
    --threads=2 \
    --log-level=warning \
    --access-logfile=- \
    --error-logfile=- \
    --capture-output \
    --timeout=120"

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

CMD ["./init.sh"]