version: '3.8'

services:
  backend:
    container_name: atria-api-dev
    build:
      context: ./backend/atria
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    volumes:
      - ./backend/atria:/app
    env_file:
      - ./backend/atria/.flaskenv
      - .env.development
    environment:
      - SEED_DB=${SEED_DB:-true}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default

  frontend-vite:
    container_name: atria-client-vite-dev
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:5000/api
    networks:
      - default
    depends_on:
      - backend

  db:
    container_name: atria-db-dev
    image: postgres:15-alpine
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default

  dicebear-api:
    container_name: atria-avatars-dev
    image: dicebear/api:3
    ports:
      - '5001:3000'
    tmpfs:
      - /run
      - /tmp
    networks:
      - default
    restart: unless-stopped

volumes:
  postgres_data_dev:

networks:
  default: