"""Add indexes for thread cutoff performance

Revision ID: 8e3e54a7a3bb
Revises: f96e4714ccd7
Create Date: 2025-08-16 21:33:58.255922

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8e3e54a7a3bb'
down_revision = 'f96e4714ccd7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('direct_message_threads', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_dm_threads_event_scope'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'events', ['event_scope_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###
    
    # Add performance indexes for thread cutoff filtering
    # Index for user1 cutoff filtering with last_message_at ordering
    op.create_index(
        'idx_dm_threads_user1_cutoff_last_msg',
        'direct_message_threads',
        ['user1_id', 'user1_cutoff', 'last_message_at'],
        postgresql_where=sa.text('user1_cutoff IS NOT NULL')
    )
    
    # Index for user2 cutoff filtering with last_message_at ordering  
    op.create_index(
        'idx_dm_threads_user2_cutoff_last_msg', 
        'direct_message_threads',
        ['user2_id', 'user2_cutoff', 'last_message_at'],
        postgresql_where=sa.text('user2_cutoff IS NOT NULL')
    )
    
    # Index for messages thread_id + created_at (for cutoff subquery)
    op.create_index(
        'idx_dm_messages_thread_created',
        'direct_messages', 
        ['thread_id', 'created_at']
    )


def downgrade():
    # Drop performance indexes
    op.drop_index('idx_dm_messages_thread_created', table_name='direct_messages')
    op.drop_index('idx_dm_threads_user2_cutoff_last_msg', table_name='direct_message_threads')
    op.drop_index('idx_dm_threads_user1_cutoff_last_msg', table_name='direct_message_threads')
    
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('direct_message_threads', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_dm_threads_event_scope'), 'events', ['event_scope_id'], ['id'], ondelete='SET NULL')

    # ### end Alembic commands ###
